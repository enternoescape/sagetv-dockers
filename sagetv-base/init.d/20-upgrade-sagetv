#!/usr/bin/env bash

# Options
VERSION=${VERSION:-latest}

# SageTV Version
SAGE_VERSION=""
if [ "${VERSION}" = "latest" ] ; then
    SAGE_VERSION=`curl https://dl.bintray.com/opensagetv/sagetv/sagetv/ | sed 's/^.*[^0-9]\([0-9]*\.[0-9]*\.[0-9]*\.[0-9]*\).*$/\1/' | egrep -e '9\.[0-9]+' | sort -V | tail -1`
else
    SAGE_VERSION=${VERSION}
fi

SAGE_VERSION_BASE=`echo "${SAGE_VERSION}" | sed 's/\.[^.]*$//'`
SAGE_SERVER_TGZ_URL="https://bintray.com/artifact/download/opensagetv/sagetv/sagetv/${SAGE_VERSION}/sagetv-server_${SAGE_VERSION_BASE}_amd64.tar.gz"
SAGE_SERVER_TGZ="sagetvserver-${SAGE_VERSION}.tgz"
SAGE_CUR_VERSION_FILE=".SAGE_CUR_VERSION"

compareVersions () {
    if [[ $1 == $2 ]]
    then
        return 0
    fi
    local IFS=.
    local i ver1=($1) ver2=($2)
    # fill empty fields in ver1 with zeros
    for ((i=${#ver1[@]}; i<${#ver2[@]}; i++))
    do
        ver1[i]=0
    done
    for ((i=0; i<${#ver1[@]}; i++))
    do
        if [[ -z ${ver2[i]} ]]
        then
            # fill empty fields in ver2 with zeros
            ver2[i]=0
        fi
        if ((10#${ver1[i]} > 10#${ver2[i]}))
        then
            return 1
        fi
        if ((10#${ver1[i]} < 10#${ver2[i]}))
        then
            return 2
        fi
    done
    return 0
}

# start command
SAGE_START=startsage

# set default sagetv home
SAGE_HOME=${SAGE_HOME:-/opt/sagetv/server}

mkdir -p ${SAGE_HOME}
cd ${SAGE_HOME}
if [ $? -eq 0 ]; then
    echo "SageTV Home: ${SAGE_HOME}"
else
    echo "Cannot Change to ${SAGE_HOME}.  Likely Missing directory and/or permissions issue";
    exit 1
fi

# check if offline, and attempt to continue
if [ "${SAGE_VERSION}" = "" ] ; then
    echo "Could not check online version.  Trying to continue with currently installed version";
    exit 0
fi

SAGE_CUR_VERSION=0
if [ -e ${SAGE_CUR_VERSION_FILE} ] ; then
    SAGE_CUR_VERSION=`cat ${SAGE_CUR_VERSION_FILE}`
fi

UPGRADE="N"

# user asked for a specific version
compareVersions "${SAGE_CUR_VERSION}" "${SAGE_VERSION}"
case $? in
    0) UPGRADE='N';; # ==
    1) UPGRADE='Y';; # > CURRENT is newer
    2) UPGRADE='Y';; # < CURRENT is older
esac

# check if new install
if [ ! -e ${SAGE_START} ] || [ "${UPGRADE}" = "Y" ] || file libSage.so|grep '32-bit' ; then
    echo "Backing up Wiz.bin, Sage.properties and Sage.jar before upgrade"
    DATESUFFIX=$(date +"%Y%m%d_%H%M%S")
    BDIR="backups/${DATESUFFIX}"
    mkdir -p "${BDIR}"
    cp -pv Wiz.bin "${BDIR}"
    cp -pv Sage.properties "${BDIR}"
    cp -pv Sage.jar "${BDIR}"

    echo "Installing/Upgrading SageTV to ${SAGE_VERSION}"
    wget -O ${SAGE_SERVER_TGZ} ${SAGE_SERVER_TGZ_URL}
    tar -zxvf ${SAGE_SERVER_TGZ}
    if [ ! $? -eq 0 ]; then
        echo "Failed to download Server!!! URL: ${SAGE_SERVER_TGZ_URL}";
        rm -rf "${BDIR}"
        exit 2
    fi
    rm -f ${SAGE_SERVER_TGZ}
    echo "${SAGE_VERSION}" > ${SAGE_CUR_VERSION_FILE}
    SAGE_CUR_VERSION=${SAGE_VERSION}

    # force setting permissions after install
    export OPT_SETPERMS=Y
else
    echo "SageTV Already At Version: ${SAGE_VERSION}, exiting..."
    exit 0
fi

echo "Sage Upgrade Complete"

exit 0
